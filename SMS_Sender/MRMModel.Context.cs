//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMS_Sender
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class mrmdbEntities : DbContext
    {
        public mrmdbEntities()
            : base("name=mrmdbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Gen_MemberType> Gen_MemberType { get; set; }
        public virtual DbSet<Gen_UserAccs> Gen_UserAccs { get; set; }
        public virtual DbSet<Gen_UserGroup> Gen_UserGroup { get; set; }
        public virtual DbSet<Gen_UserStatus> Gen_UserStatus { get; set; }
        public virtual DbSet<Mem_Contacts> Mem_Contacts { get; set; }
        public virtual DbSet<Mem_Details> Mem_Details { get; set; }
        public virtual DbSet<Mem_Info> Mem_Info { get; set; }
        public virtual DbSet<Mem_MemberToGroup> Mem_MemberToGroup { get; set; }
        public virtual DbSet<Mem_Status> Mem_Status { get; set; }
        public virtual DbSet<Mem_Title> Mem_Title { get; set; }
        public virtual DbSet<MF_Details> MF_Details { get; set; }
        public virtual DbSet<MF_Status> MF_Status { get; set; }
        public virtual DbSet<MH_AttentionItem> MH_AttentionItem { get; set; }
        public virtual DbSet<MH_FamilyCondition> MH_FamilyCondition { get; set; }
        public virtual DbSet<MH_MedAllergy> MH_MedAllergy { get; set; }
        public virtual DbSet<MH_MedCondition> MH_MedCondition { get; set; }
        public virtual DbSet<MH_MedProcedure> MH_MedProcedure { get; set; }
        public virtual DbSet<MH_Mem_AttentionReq> MH_Mem_AttentionReq { get; set; }
        public virtual DbSet<MH_Mem_BloodGroup> MH_Mem_BloodGroup { get; set; }
        public virtual DbSet<MH_Mem_FamilyCondition> MH_Mem_FamilyCondition { get; set; }
        public virtual DbSet<MH_Mem_MedAllergy> MH_Mem_MedAllergy { get; set; }
        public virtual DbSet<MH_Mem_MedCondition> MH_Mem_MedCondition { get; set; }
        public virtual DbSet<MH_Mem_MedProcedure> MH_Mem_MedProcedure { get; set; }
        public virtual DbSet<MH_Mem_RoutineMeds> MH_Mem_RoutineMeds { get; set; }
        public virtual DbSet<MH_TimePeriod> MH_TimePeriod { get; set; }
        public virtual DbSet<VIS_AttStatus> VIS_AttStatus { get; set; }
        public virtual DbSet<VIS_FileAttachment> VIS_FileAttachment { get; set; }
        public virtual DbSet<VIS_ReviewStatus> VIS_ReviewStatus { get; set; }
        public virtual DbSet<VIS_Visit> VIS_Visit { get; set; }
        public virtual DbSet<VIS_VisitStatus> VIS_VisitStatus { get; set; }
    
        public virtual ObjectResult<usp_Gen_UserLogin_Result> usp_Gen_UserLogin(string uname, string passkey)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var passkeyParameter = passkey != null ?
                new ObjectParameter("passkey", passkey) :
                new ObjectParameter("passkey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Gen_UserLogin_Result>("usp_Gen_UserLogin", unameParameter, passkeyParameter);
        }
    
        public virtual ObjectResult<usp_MH_GetAllHistorySecs_Result> usp_MH_GetAllHistorySecs(Nullable<int> memid)
        {
            var memidParameter = memid.HasValue ?
                new ObjectParameter("memid", memid) :
                new ObjectParameter("memid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MH_GetAllHistorySecs_Result>("usp_MH_GetAllHistorySecs", memidParameter);
        }
    
        public virtual ObjectResult<usp_MH_PopulateMedHistoryTabs_Result> usp_MH_PopulateMedHistoryTabs(Nullable<int> memid, Nullable<short> tabtype, Nullable<int> userid)
        {
            var memidParameter = memid.HasValue ?
                new ObjectParameter("memid", memid) :
                new ObjectParameter("memid", typeof(int));
    
            var tabtypeParameter = tabtype.HasValue ?
                new ObjectParameter("tabtype", tabtype) :
                new ObjectParameter("tabtype", typeof(short));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MH_PopulateMedHistoryTabs_Result>("usp_MH_PopulateMedHistoryTabs", memidParameter, tabtypeParameter, useridParameter);
        }
    }
}
